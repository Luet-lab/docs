<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Luet ‚Äì Examples</title>
    <link>https://luet-lab.github.io/docs/docs/examples/</link>
    <description>Recent content in Examples on Luet</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 05 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://luet-lab.github.io/docs/docs/examples/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: ARM images</title>
      <link>https://luet-lab.github.io/docs/docs/examples/arm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://luet-lab.github.io/docs/docs/examples/arm/</guid>
      <description>
        
        
        

&lt;p&gt;We will see an example on how to build burnable SD images for Raspberry PI with Luet. This approach let you describe and version OTA upgrades for your embedded devices, delivering upgrades as layer upgrades on the pi.&lt;/p&gt;

&lt;p&gt;The other good side of the medal is that you can build a Luet package repository with multiple distributions (e.g. &lt;code&gt;Raspbian&lt;/code&gt;, &lt;code&gt;OpenSUSE&lt;/code&gt;, &lt;code&gt;Gentoo&lt;/code&gt;, &amp;hellip; ) and switch among them in runtime. In the above example &lt;code&gt;Raspbian&lt;/code&gt; and &lt;code&gt;Funtoo&lt;/code&gt; (at the time of writing) are available.&lt;/p&gt;

&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;You have to run the following steps inside an ARM board to produce arm-compatible binaries. Whatever distribution with Docker will work. Note that the same steps could be done in a cross-compilation approach, or either with qemu-binfmt in a amd64 host.&lt;/p&gt;

&lt;p&gt;You will also need in your host:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;luet installed (+container-diff) in &lt;code&gt;/usr/bin/luet&lt;/code&gt; (arm build)&lt;/li&gt;
&lt;li&gt;make&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;build-the-packages&#34;&gt;Build the packages&lt;/h2&gt;

&lt;p&gt;Clone the repository &lt;a href=&#34;https://github.com/Luet-lab/luet-embedded&#34; target=&#34;_blank&#34;&gt;https://github.com/Luet-lab/luet-embedded&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$&amp;gt; git clone https://github.com/Luet-lab/luet-embedded
$&amp;gt; cd luet-embedded
$&amp;gt; sudo make build-all
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;While to rebuild, after doing changes, just do: &lt;code&gt;sudo make rebuild-all&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;create-the-repository&#34;&gt;Create the repository&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$&amp;gt; sudo make create-repo
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;serve-the-repo-locally&#34;&gt;Serve the repo locally&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$&amp;gt; make serve-repo
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;create-the-flashable-image&#34;&gt;Create the flashable image&lt;/h2&gt;

&lt;h3 id=&#34;funtoo-based-system&#34;&gt;Funtoo based system&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$&amp;gt; sudo LUET_PACKAGES=&#39;distro/funtoo-1.4 distro/raspbian-boot-0.20191208 system/luet-develop-0.5&#39; make image
...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;raspbian-based-system&#34;&gt;Raspbian based system&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$&amp;gt; sudo LUET_PACKAGES=&#39;distro/raspbian-0.20191208 distro/raspbian-boot-0.20191208 system/luet-develop-0.5&#39; make image
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At the end of the process, a file &lt;code&gt;luet_os.img&lt;/code&gt; should be present in the current folder, ready to be flashed to an SD.&lt;/p&gt;

&lt;h2 id=&#34;add-packages&#34;&gt;Add packages&lt;/h2&gt;

&lt;p&gt;In order to build and add &lt;a href=&#34;https://luet-lab.github.io/docs/docs/concepts/packages/&#34;&gt;packages&lt;/a&gt; to the exiting repository, simply add or edit the &lt;a href=&#34;https://luet-lab.github.io/docs/docs/concepts/specfile&#34;&gt;specfiles&lt;/a&gt; under the &lt;code&gt;distro&lt;/code&gt; folder. When doing &lt;code&gt;make rebuild-all&lt;/code&gt; they will be automatically compiled and made available to the local repository.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Building</title>
      <link>https://luet-lab.github.io/docs/docs/examples/building/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://luet-lab.github.io/docs/docs/examples/building/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;simple-package-build&#34;&gt;Simple package build&lt;/h2&gt;

&lt;p&gt;Create a simple &lt;a href=&#34;https://luet-lab.github.io/docs/docs/concepts/packages/&#34;&gt;package&lt;/a&gt; definition and build it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$&amp;gt; mkdir package

$&amp;gt; cat &amp;lt;&amp;lt;EOF &amp;gt; package/build.yaml
image: busybox
steps:
- echo &amp;quot;foo&amp;quot; &amp;gt; /foo
EOF

$&amp;gt; cat &amp;lt;&amp;lt;EOF &amp;gt; package/definition.yaml
name: &amp;quot;foo&amp;quot;
version: &amp;quot;0.1&amp;quot;
EOF

$&amp;gt; luet build --all

üì¶  Selecting  foo 0.1
üì¶  Compiling foo version 0.1 .... ‚òï
üêã  Downloading image luet/cache-foo-bar-0.1-builder
üêã  Downloading image luet/cache-foo-bar-0.1
üì¶   foo Generating üêã  definition for builder image from busybox
üêã  Building image luet/cache-foo-bar-0.1-builder
üêã  Building image luet/cache-foo-bar-0.1-builder done
 Sending build context to Docker daemon  4.096kB
 ...

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;build-packages&#34;&gt;Build packages&lt;/h3&gt;

&lt;p&gt;To build a specific version, the full &lt;a href=&#34;https://luet-lab.github.io/docs/docs/concepts/packages/&#34;&gt;package&lt;/a&gt; definition (triple of &lt;code&gt;category&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt;) has to be specified.
In this example we will also enable package compression (gzip).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$&amp;gt; mkdir package

$&amp;gt; cat &amp;lt;&amp;lt;EOF &amp;gt; package/build.yaml
image: busybox
steps:
- echo &amp;quot;foo&amp;quot; &amp;gt; /foo
EOF

$&amp;gt; cat &amp;lt;&amp;lt;EOF &amp;gt; package/definition.yaml
name: &amp;quot;foo&amp;quot;
version: &amp;quot;0.1&amp;quot;
category: &amp;quot;bar&amp;quot;
EOF

$&amp;gt; luet build bar/foo-0.1 --compression gzip

üì¶  Selecting  foo 0.1
üì¶  Compiling foo version 0.1 .... ‚òï
üêã  Downloading image luet/cache-foo-bar-0.1-builder
üêã  Downloading image luet/cache-foo-bar-0.1
üì¶   foo Generating üêã  definition for builder image from busybox
üêã  Building image luet/cache-foo-bar-0.1-builder
üêã  Building image luet/cache-foo-bar-0.1-builder done
 Sending build context to Docker daemon  4.096kB
 ...

&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Images from scratch</title>
      <link>https://luet-lab.github.io/docs/docs/examples/scratch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://luet-lab.github.io/docs/docs/examples/scratch/</guid>
      <description>
        
        
        &lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cat &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;&amp;lt;EOF &amp;gt; $PWD/luet.yaml  
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;system-repositories: 
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;                   - name: &amp;#34;main&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;                     type: &amp;#34;http&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;                     uri: &amp;#34;https://your-repo.org/path&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;EOF&lt;/span&gt;

docker rm luet-runtime-test &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;
docker run --name luet-runtime-test &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;       -ti -v /tmp:/tmp &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;       -v &lt;span style=&#34;color:#000&#34;&gt;$PWD&lt;/span&gt;/luet.yaml:/etc/luet/.luet.yaml:ro &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;       quay.io/luet/base install &amp;lt;package&amp;gt;
 
docker commit luet-runtime-test luet-runtime-test-image

&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Try your new image!&lt;/span&gt;

docker run -ti --entrypoint /bin/sh --rm luet-runtime-test-image&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
